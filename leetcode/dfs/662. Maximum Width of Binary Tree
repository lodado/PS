from collections import defaultdict
from sys import setrecursionlimit

setrecursionlimit(10**9)
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def widthOfBinaryTree(self, root: Optional[TreeNode]) -> int:
        answer = 0
        dic = {}
        
        def dfs(root, level, index):
            nonlocal answer

            if not root:
                return

            if level not in dic:
                dic[level] = [index, index]

            dic[level][0] = min(dic[level][0], index)
            dic[level][1] = max(dic[level][1], index)

            answer = max(answer, dic[level][1] - dic[level][0]+1)

            dfs(root.left, level+1, 2*index)
            dfs(root.right, level+1, 2*index+1)
        
        dfs(root, 0, 0)

        return answer
