# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxAncestorDiff(self, root: Optional[TreeNode]) -> int:
        global ans
        ans = 0

        def dfs(now, maxi, mini):
            global ans
            ans = max(abs(maxi-now.val), ans, abs(mini-now.val))
            if now.left:
                dfs(now.left, max(maxi, now.val), min(mini, now.val))
            if now.right:
                dfs(now.right,max(maxi, now.val), min(mini, now.val))

        dfs(root, root.val, root.val)
        return ans
