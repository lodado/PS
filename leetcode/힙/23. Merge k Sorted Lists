import heapq

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:
        
        hq = []
        for lst in lists:
            cursor = lst
            while cursor:
                heapq.heappush(hq, cursor.val)
                cursor = cursor.next
                
        head = ListNode(None)
        cursor = head
        
        while hq:
            cursor.next = ListNode(heapq.heappop(hq))
            cursor = cursor.next 
            
        return head.next
