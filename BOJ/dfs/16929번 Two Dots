N, M = map(int, input().split())
arr = [list(input().rstrip()) for _ in range(N)]

dx, dy = [0,0,1,-1], [1,-1,0,0]
ans = False

def dfs(startX, startY, x, y, visitied, word, depth=0):
    global ans, N, M, dx, dy
    
    if visited[y][x] or ans:
        return
    
    visited[y][x] = True
    
    for i in range(4):
        newX = x + dx[i]
        newY = y + dy[i]
        
        if(0<=newX<M and 0<=newY<N and  word == arr[newY][newX]):     
            if not visited[newY][newX]:
                dfs(startX, startY, newX, newY, visited, word, depth+1)
            else:
                if(depth>=3 and newX == startX and newY==startY):
                    ans = True
                    return
            
for y in range(N):
    for x in range(M):
        visited = [[False for _ in range(M)] for _ in range(N)]
        dfs(x, y, x, y, visited, arr[y][x])

print('Yes' if ans else 'No')
    
